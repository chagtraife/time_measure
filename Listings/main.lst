C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2023 22:06:51 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <AT892051.H>
   2          #include <stdio.h>      
   3          
   4          sbit LED7A  = P1^4;
   5          sbit LED7B  = P1^5;
   6          sbit LED7C  = P1^6;
   7          sbit LED7D  = P1^1;
   8          sbit LED7E  = P1^0;
   9          sbit LED7F  = P1^3;
  10          sbit LED7G  = P1^2;
  11          sbit LED7DP = P1^7;
  12          sbit LED7_1 = P3^5;
  13          sbit LED7_2 = P3^4;
  14          sbit LED7_3 = P3^3;
  15          sbit LED7_4 = P3^2;
  16          
  17          sbit RANGE_SW  = P3^0;
  18          sbit COM    = P3^1;
  19          sbit RESET  = P3^7;
  20          
  21          //magic number define
  22          /*
  23              7 6 5 4 3 2 1 0
  24              DP C B A F G D E
  25          0   1 0 0 0 0 1 0 0  -> 0x84
  26          1       1 0 0 1 1 1 1 1  -> 0x9F
  27          2   1 1 0 0 1 0 0 0  -> 0xC8
  28          3   1 0 0 0 1 0 0 1  -> 0x89
  29          4   1 0 0 1 0 0 1 1  -> 0x93
  30          5   1 0 1 0 0 0 0 1  -> 0xA1
  31          6   1 0 1 0 0 0 0 0  -> 0xA0
  32          7   1 0 0 0 1 1 1 1  -> 0x8F
  33          8   1 0 0 0 0 0 0 0  -> 0x80
  34          9   1 0 0 0 0 0 0 1  -> 0x81
  35          */
  36          unsigned int led7[10] = { 0x84, 0x9F, 0xC8, 0x89, 0x93, 0xA1, 0xA0, 0x8F, 0x80, 0x81 };
  37          
  38          // global variable define
  39          // range_mode == 1 --> 99,99 -> f = 100,  time count = 10ms,   timerValue = 0x2710 = 10000
  40          // range_mode == 0 --> 9,999 -> f = 1000, time count = 1ms,    timerValue = 0x03E8 = 1000
  41          bit range_mode = 1;
  42          unsigned int factor = 100;
  43          
  44          unsigned int time = 0;
  45          unsigned int digitVal_1, digitVal_2, digitVal_3, digitVal_4 = 0;
  46          unsigned int pointIdx = 0;
  47          unsigned int digitIdx = 1; // range in 1-4
  48          
  49          void init_TC0(void);
  50          void init_TC1(void);
  51          void setTimer1Value(void);
  52          void init_GPIO(void);
  53          
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2023 22:06:51 PAGE 2   

  55          void readResetButton(void);
  56          void readRangeSW(void);
  57          void display(void);
  58          
  59          void setDisplay(unsigned int number, unsigned int f);
  60          void resetTime(void);
  61          void update(void);
  62          
  63          // util function
  64          void delay_ms(unsigned int itime);
  65          
  66          void main (void)
  67          {
  68   1              readRangeSW();
  69   1              init_GPIO();
  70   1              init_TC0();
  71   1              init_TC1();
  72   1      
  73   1              update();
  74   1              while (1)
  75   1              {
  76   2                      readRangeSW();
  77   2                      readResetButton();
  78   2                      delay_ms(20);
  79   2              }
  80   1      }
  81          
  82          void init_GPIO(void)
  83          {
  84   1              RESET = 0;
  85   1              COM = 1;
  86   1              RANGE_SW = 1;
  87   1      }
  88          
  89          // used for display
  90          void init_TC0(void)
  91          {
  92   1              ET0 = 1;         // cho phep ngat timer 0
  93   1              TMOD = 0x02;    //Sd Timer0 che do 8bit tu nap lai (ngat timer)
  94   1              TH0 = 0x1F;      //Nap gia tri bat dau 8bit
  95   1              TL0 = 0x1F;
  96   1              TR0 = 1;         //Khoi dong timer0
  97   1              ET0 = 1;         //Ngat timer0
  98   1              EA = 1;          // cho phep ngat toan cuc
  99   1      }
 100          
 101          //used for count
 102          void init_TC1(void)
 103          {
 104   1              ET1 = 1;         // cho phep ngat timer 1
 105   1              TMOD |= 0x10;    //Use Timer1 at 16-bit timer mode.
 106   1              setTimer1Value();
 107   1              TR1 = 1;         //Khoi dong timer1
 108   1              ET1 = 1;         //Ngat timer1
 109   1              EA = 1;          // cho phep ngat toan cuc
 110   1      }
 111          
 112          void setTimer1Value(void)
 113          {
 114   1              if (range_mode == 1) {
 115   2                      //range_mode == 1 --> 99,99 -> f = 100,  time count = 10ms,   timerValue = 0x2710 = 10000
 116   2                      TH1 = 0x03;
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2023 22:06:51 PAGE 3   

 117   2                      TL1 = 0xE8;
 118   2              } else {
 119   2                      // range_mode == 0 --> 9,999 -> f = 1000, time count = 1ms,  timerValue = 0x03E8 = 1000
 120   2                      TH1 = 0x27;
 121   2                      TL1 = 0x10;
 122   2              }
 123   1      }
 124          
 125          void readRangeSW(void)
 126          {
 127   1              if (range_mode != RANGE_SW) {
 128   2                      delay_ms(50);
 129   2                      if (range_mode != RANGE_SW){
 130   3                              range_mode = RANGE_SW;
 131   3                              if (range_mode == 1) {
 132   4                                      factor = 100;
 133   4                              } else {
 134   4                                      factor = 1000;
 135   4                                      
 136   4                              }
 137   3                              //update counter
 138   3                              setTimer1Value();
 139   3                              update();
 140   3                              resetTime();
 141   3                      }
 142   2              }
 143   1      }
 144          
 145          void readResetButton()
 146          {
 147   1              if (RESET == 1) {
 148   2                      delay_ms(20);
 149   2                      while (RESET == 1){
 150   3                              delay_ms(10);
 151   3                      }
 152   2                      resetTime();
 153   2              }
 154   1      }
 155                  
 156          void resetTime()
 157          {
 158   1              time = 0;
 159   1              update();
 160   1      }
 161          
 162          void update(void)
 163          {
 164   1              setDisplay(time, factor);
 165   1      }
 166          
 167          void setDisplay(unsigned int number, unsigned int f)
 168          {
 169   1              digitVal_1 = number % 10;
 170   1              digitVal_2 = (number /10) % 10;
 171   1              digitVal_3 = (number /100) % 10;
 172   1              digitVal_4 = (number /1000) % 10;
 173   1              
 174   1              if (f == 1){
 175   2                      pointIdx = 0;
 176   2              } else if (f == 10) {
 177   2                      pointIdx = 2;
 178   2              } else if (f == 100) {
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2023 22:06:51 PAGE 4   

 179   2                      pointIdx = 3;
 180   2              } else if (f == 1000) {
 181   2                      pointIdx = 4;
 182   2              }
 183   1      }
 184          
 185          void display(void)
 186          {
 187   1              LED7_1 = 1;
 188   1              LED7_2 = 1;
 189   1              LED7_3 = 1;
 190   1              LED7_4 = 1;
 191   1              switch (digitIdx) {
 192   2                      case 1: {
 193   3                              P1 = led7[digitVal_1];
 194   3                              if (pointIdx == 1){
 195   4                                      LED7DP = 0;
 196   4                              }
 197   3                              LED7_1 = 0;
 198   3                              break;
 199   3                      }
 200   2                      case 2: {
 201   3                              P1 = led7[digitVal_2];
 202   3                              if (pointIdx == 2){
 203   4                                      LED7DP = 0;
 204   4                              }
 205   3                              LED7_2 = 0;
 206   3                              break;
 207   3                      }
 208   2                      case 3: {
 209   3                              P1 = led7[digitVal_3];
 210   3                              if (pointIdx == 3){
 211   4                                      LED7DP = 0;
 212   4                              }
 213   3                              LED7_3 = 0;
 214   3                              break;
 215   3                      }
 216   2                      case 4: {
 217   3                              P1 = led7[digitVal_4];
 218   3                              if (pointIdx == 4){
 219   4                                      LED7DP = 0;
 220   4                              }
 221   3                              LED7_4 = 0;     
 222   3                              break;
 223   3                      }
 224   2              }
 225   1              
 226   1              if (digitIdx == 4) {
 227   2                      digitIdx = 1;
 228   2              } else {
 229   2                      digitIdx++;
 230   2              }
 231   1      }
 232          
 233          void delay_ms(unsigned int itime)
 234          {
 235   1              unsigned int i, j;
 236   1              unsigned char d;
 237   1              for (i=0;i < itime;i++) {
 238   2                      for(j=0;j<1275;j++) {
 239   3                              d=0;
 240   3                      }
C51 COMPILER V9.60.7.0   MAIN                                                              06/30/2023 22:06:51 PAGE 5   

 241   2              }
 242   1      }
 243          
 244          //timer interupt for display
 245          void ISR_ET0 (void) interrupt 1 
 246          {
 247   1          display();
 248   1      }
 249          
 250          //timer interupt for count time : only count when COM set to 1
 251          void ISR_ET1 (void) interrupt 3
 252          {
 253   1              if (COM == 1){
 254   2                      time++;
 255   2                      update();
 256   2              }
 257   1              setTimer1Value();
 258   1      }
 259          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    592    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
