C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2023 15:43:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <AT892051.H>
   2          #include <stdio.h>      
   3          
   4          sbit LED7A  = P1^4;
   5          sbit LED7B  = P1^5;
   6          sbit LED7C  = P1^6;
   7          sbit LED7D  = P1^1;
   8          sbit LED7E  = P1^0;
   9          sbit LED7F  = P1^3;
  10          sbit LED7G  = P1^2;
  11          sbit LED7DP = P1^7;
  12          sbit LED7_1 = P3^5;
  13          sbit LED7_2 = P3^4;
  14          sbit LED7_3 = P3^3;
  15          sbit LED7_4 = P3^2;
  16          
  17          sbit RANGE_SW  = P3^0;
  18          sbit COM    = P3^1;
  19          sbit RESET  = P3^7;
  20          
  21          //magic number define
  22          /*
  23              7 6 5 4 3 2 1 0
  24              DP C B A F G D E
  25          0   1 0 0 0 0 1 0 0  -> 0x84
  26          1       1 0 0 1 1 1 1 1  -> 0x9F
  27          2   1 1 0 0 1 0 0 0  -> 0xC8
  28          3   1 0 0 0 1 0 0 1  -> 0x89
  29          4   1 0 0 1 0 0 1 1  -> 0x93
  30          5   1 0 1 0 0 0 0 1  -> 0xA1
  31          6   1 0 1 0 0 0 0 0  -> 0xA0
  32          7   1 0 0 0 1 1 1 1  -> 0x8F
  33          8   1 0 0 0 0 0 0 0  -> 0x80
  34          9   1 0 0 0 0 0 0 1  -> 0x81
  35          */
  36          unsigned int led7[10] = { 0x84, 0x9F, 0xC8, 0x89, 0x93, 0xA1, 0xA0, 0x8F, 0x80, 0x81 };
  37          
  38          // global variable define
  39          // range_mode == 1 --> 99,99 -> f = 100,  time count = 10ms,   timerValue = 0x2710 = 10000
  40          // range_mode == 0 --> 9,999 -> f = 1000, time count = 1ms,    timerValue = 0x03E8 = 1000
  41          bit range_mode = 1;
  42          unsigned int factor = 100;
  43          
  44          unsigned int time = 0;
  45          unsigned int time_1000 = 0;
  46          unsigned int time_mode0 = 0;
  47          unsigned int digitVal_1, digitVal_2, digitVal_3, digitVal_4 = 0;
  48          unsigned int pointIdx = 0;
  49          unsigned int digitIdx = 1; // range in 1-4
  50          
  51          void init_TC0(void);
  52          void init_TC1(void);
  53          void setTimer1Value(void);
  54          void init_GPIO(void);
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2023 15:43:40 PAGE 2   

  55          
  56          
  57          void readResetButton(void);
  58          void readRangeSW(void);
  59          void display(void);
  60          
  61          void setDisplay(unsigned int number, unsigned int f);
  62          void resetTime(void);
  63          void update(void);
  64          
  65          // util function
  66          void delay_ms(unsigned int itime);
  67          
  68          void main (void)
  69          {
  70   1              readRangeSW();
  71   1              init_GPIO();
  72   1              init_TC0();
  73   1              init_TC1();
  74   1      
  75   1              update();
  76   1              while (1)
  77   1              {
  78   2                      readRangeSW();
  79   2                      readResetButton();
  80   2                      delay_ms(20);
  81   2              }
  82   1      }
  83          
  84          void init_GPIO(void)
  85          {
  86   1              RESET = 0;
  87   1              COM = 1;
  88   1              RANGE_SW = 1;
  89   1      }
  90          
  91          // used for display
  92          void init_TC0(void)
  93          {
  94   1              ET0 = 1;         // cho phep ngat timer 0
  95   1              TMOD = 0x02;    //Sd Timer0 che do 8bit tu nap lai (ngat timer)
  96   1              TH0 = 0x1F;      //Nap gia tri bat dau 8bit
  97   1              TL0 = 0x1F;
  98   1              TR0 = 1;         //Khoi dong timer0
  99   1              ET0 = 1;         //Ngat timer0
 100   1              EA = 1;          // cho phep ngat toan cuc
 101   1      }
 102          
 103          //used for count
 104          void init_TC1(void)
 105          {
 106   1              ET1 = 1;         // cho phep ngat timer 1
 107   1              TMOD |= 0x10;    //Use Timer1 at 16-bit timer mode.
 108   1              setTimer1Value();
 109   1              TR1 = 1;         //Khoi dong timer1
 110   1              ET1 = 1;         //Ngat timer1
 111   1              EA = 1;          // cho phep ngat toan cuc
 112   1      }
 113          
 114          void setTimer1Value(void)
 115          {
 116   1              //time count = 1ms,  timerValue = 0x03E8 = 1000
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2023 15:43:40 PAGE 3   

 117   1              TH1 = 0x03;
 118   1              TL1 = 0x8E;
 119   1      }
 120          
 121          void readRangeSW(void)
 122          {
 123   1              if (range_mode != RANGE_SW) {
 124   2                      delay_ms(50);
 125   2                      if (range_mode != RANGE_SW){
 126   3                              range_mode = RANGE_SW;
 127   3                              if (range_mode == 1) {
 128   4                                      factor = 100;
 129   4                              } else {
 130   4                                      factor = 1000;
 131   4                                      
 132   4                              }
 133   3                              update();
 134   3                      }
 135   2              }
 136   1      }
 137          
 138          void readResetButton()
 139          {
 140   1              if (RESET == 1) {
 141   2                      delay_ms(20);
 142   2                      while (RESET == 1){
 143   3                              delay_ms(10);
 144   3                      }
 145   2                      resetTime();
 146   2              }
 147   1      }
 148                  
 149          void resetTime()
 150          {
 151   1              time = 0;
 152   1              update();
 153   1      }
 154          
 155          void update(void)
 156          {
 157   1              if (factor == 1000){
 158   2                      time_mode0      = (time % 1000) *10 + time_1000;
 159   2                      setDisplay(time_mode0, factor);
 160   2              } else {
 161   2                      setDisplay(time, factor);
 162   2              }
 163   1      }
 164          
 165          void setDisplay(unsigned int number, unsigned int f)
 166          {
 167   1              digitVal_1 = number % 10;
 168   1              digitVal_2 = (number /10) % 10;
 169   1              digitVal_3 = (number /100) % 10;
 170   1              digitVal_4 = (number /1000) % 10;
 171   1              
 172   1              if (f == 1){
 173   2                      pointIdx = 0;
 174   2              } else if (f == 10) {
 175   2                      pointIdx = 2;
 176   2              } else if (f == 100) {
 177   2                      pointIdx = 3;
 178   2              } else if (f == 1000) {
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2023 15:43:40 PAGE 4   

 179   2                      pointIdx = 4;
 180   2              }
 181   1      }
 182          
 183          void display(void)
 184          {
 185   1              LED7_1 = 1;
 186   1              LED7_2 = 1;
 187   1              LED7_3 = 1;
 188   1              LED7_4 = 1;
 189   1              switch (digitIdx) {
 190   2                      case 1: {
 191   3                              P1 = led7[digitVal_1];
 192   3                              if (pointIdx == 1){
 193   4                                      LED7DP = 0;
 194   4                              }
 195   3                              LED7_1 = 0;
 196   3                              break;
 197   3                      }
 198   2                      case 2: {
 199   3                              P1 = led7[digitVal_2];
 200   3                              if (pointIdx == 2){
 201   4                                      LED7DP = 0;
 202   4                              }
 203   3                              LED7_2 = 0;
 204   3                              break;
 205   3                      }
 206   2                      case 3: {
 207   3                              P1 = led7[digitVal_3];
 208   3                              if (pointIdx == 3){
 209   4                                      LED7DP = 0;
 210   4                              }
 211   3                              LED7_3 = 0;
 212   3                              break;
 213   3                      }
 214   2                      case 4: {
 215   3                              P1 = led7[digitVal_4];
 216   3                              if (pointIdx == 4){
 217   4                                      LED7DP = 0;
 218   4                              }
 219   3                              LED7_4 = 0;     
 220   3                              break;
 221   3                      }
 222   2              }
 223   1              
 224   1              if (digitIdx == 4) {
 225   2                      digitIdx = 1;
 226   2              } else {
 227   2                      digitIdx++;
 228   2              }
 229   1      }
 230          
 231          void delay_ms(unsigned int itime)
 232          {
 233   1              unsigned int i, j;
 234   1              unsigned char d;
 235   1              for (i=0;i < itime;i++) {
 236   2                      for(j=0;j<1275;j++) {
 237   3                              d=0;
 238   3                      }
 239   2              }
 240   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2023 15:43:40 PAGE 5   

 241          
 242          //timer interupt for display
 243          void ISR_ET0 (void) interrupt 1 
 244          {
 245   1          display();
 246   1      }
 247          
 248          //timer interupt for count time : only count when COM set to 1
 249          void ISR_ET1 (void) interrupt 3
 250          {
 251   1              if (COM == 1){
 252   2                      time_1000++;
 253   2                      if (time_1000 == 10) {
 254   3                              time_1000 = 0;
 255   3                              time++; 
 256   3                      }
 257   2                      update();
 258   2              }
 259   1              setTimer1Value();
 260   1      }
 261          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    642    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
